"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1767],{76110:n=>{n.exports=JSON.parse('{"functions":[{"name":"numberToTuple","desc":"Returns the given `number`\'s tuple, if any. Supports up to `57` tuples!\\n\\n```lua\\nprint(numberFormatUtil.numberToTuple(2)) --\x3e \\"Double\\"\\nprint(numberFormatUtil.numberToTuple(3)) --\x3e \\"Triple\\"\\nprint(numberFormatUtil.numberToTuple(4)) --\x3e \\"Quadruple\\"\\n```","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string?\\n"}],"function_type":"static","source":{"line":103,"path":"src/numberFormatUtil/init.luau"}},{"name":"ordinal","desc":"Returns the given number in ordinal format.\\n\\n```lua\\nprint(numberFormatUtil.ordinal(24)) --\x3e \\"24th\\"\\n```","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":115,"path":"src/numberFormatUtil/init.luau"}},{"name":"spsToMph","desc":"Formats `sps` (studs per second) to `mph` (miles per second).\\n\\n```lua\\nprint(numberFormatUtil.spsToMph(100, 50, 25)) --\x3e 0.75\\n```","params":[{"name":"sps","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"number\\n"}],"function_type":"static","source":{"line":139,"path":"src/numberFormatUtil/init.luau"}},{"name":"suffix","desc":"Return a string as the formatted version of `number`. \\n\\n:::warning Cannot format extremely large numbers\\nThis method will struggle to format numbers larger than approximately `10^68`. \\n\\n```lua\\nprint(numberFormatUtil.suffix(10^70)) --\x3e 10 (no formatting...)\\n```\\n:::\\n\\n```lua\\nprint(numberFormatUtil.suffix(1650)) --\x3e \\"1.65K\\"\\n```\\n\\nAdditionally, if `number` is lower than `1`, then this method will just return `number` (stringified).","params":[{"name":"number","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":160,"path":"src/numberFormatUtil/init.luau"}},{"name":"commas","desc":"Returns a number stringified, formatted with commas.\\n\\n```lua\\nprint(numberFormatUtil.commas(15000)) --\x3e 15,000\\n```","params":[{"name":"target","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":182,"path":"src/numberFormatUtil/init.luau"}},{"name":"toHMS","desc":"Returns the given `seconds` formatted in `HMS` format as a string.\\n\\n```lua\\nprint(numberFormatUtil.toHMS(3600)) --\x3e \\"01:00:00\\"\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":205,"path":"src/numberFormatUtil/init.luau"}},{"name":"toMS","desc":"Returns the given `seconds` formatted in `MS` format as a string.\\n\\n```lua\\nprint(numberFormatUtil.toHMS(60)) --\x3e \\"01:00\\"\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":217,"path":"src/numberFormatUtil/init.luau"}},{"name":"toS","desc":"Returns the given `seconds` formatted in `S` format as a string.\\n\\n```lua\\nprint(numberFormatUtil.toHMS(60)) --\x3e \\"1:00\\"\\n```","params":[{"name":"seconds","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"string\\n"}],"function_type":"static","source":{"line":229,"path":"src/numberFormatUtil/init.luau"}}],"properties":[],"types":[],"name":"numberFormatUtil","desc":" \\n\\nA simple utility for formatting numbers in human readable format.","source":{"line":6,"path":"src/numberFormatUtil/init.luau"}}')}}]);