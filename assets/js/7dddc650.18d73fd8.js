"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9914],{84386:e=>{e.exports=JSON.parse('{"functions":[{"name":"playerHumanoid","desc":" \\nAttempts to return the given `player`\'s character\'s humanoid, if found.","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"Humanoid?\\r\\n"}],"function_type":"static","source":{"line":20,"path":"src/playerHumanoidUtil/init.luau"}},{"name":"playerHumanoidPromise","desc":" \\nPromisfied verison of [playerHumanoidUtil.playerHumanoid].","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[{"desc":"","lua_type":"Promise<Humanoid>"}],"function_type":"static","source":{"line":30,"path":"src/playerHumanoidUtil/init.luau"}},{"name":"seatPlayer","desc":" \\nAttempts the seat the `given` player in `seat` if `seat.Occupant` = `nil`. Handles an edgecase\\nwhere [seat:Sit](https://create.roblox.com/docs/reference/engine/classes/Seat#Sit) does not work\\nif given humanoid was seated, by unsitting the humanoid through  `humanoid.Sit = false` and then seating the humanoid.","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"seat","desc":"","lua_type":"VehicleSeat | Seat"}],"returns":[],"function_type":"static","source":{"line":84,"path":"src/playerHumanoidUtil/init.luau"}},{"name":"playerHumanoidSeatPartObserver","desc":" \\n```lua\\nplayerHumanoidUtil.playerHumanoidSeatPartObserver(player, function(newSeatPlayerIsSittingOn)\\n\\tprint(player.Name .. \\" sat on seat \\" ..tostring(newSeatPlayerIsSittingOn.Name))\\t\\t\\nend, function(newSeatPlayerIsNoLongerSittingOn)\\n\\tif newSeatPlayerIsNoLongerSittingOn ~= nil then \\n\\t\\tprint(player.Name .. \\" left seat \\" ..tostring(newSeatPlayerIsNoLongerSittingOn.Name))\\t\\t\\n\\tend\\nend)\\n```\\n\\nWhile you can simply listen to [humanoid.SeatPart](https://create.roblox.com/docs/reference/engine/classes/Humanoid#SeatPart), \\nthis method accounts for new player character reloading. Returns a cleanup function.","params":[{"name":"player","desc":"","lua_type":"Player"},{"name":"observerSeated","desc":"","lua_type":"((\\r\\n\\t\\tnewSeatPlayerIsSittingOn: Seat | VehicleSeat,\\r\\n\\t\\toldSeatPlayerWasSittingOn: (Seat | VehicleSeat)?\\r\\n\\t) -> ())?"},{"name":"observerUnseated","desc":"","lua_type":"((\\r\\n\\t\\tnewSeatPlayerIsNoLongerSittingOn: (Seat | VehicleSeat)?,\\r\\n\\t\\toldSeatPlayerWasNoLongerSittingOn: (Seat | VehicleSeat)?\\r\\n\\t) -> ())?\\r\\n"}],"returns":[{"desc":"","lua_type":"() -> ()\\r\\n"}],"function_type":"static","source":{"line":118,"path":"src/playerHumanoidUtil/init.luau"}}],"properties":[],"types":[],"name":"playerHumanoidUtil","desc":"A simple utility module for working with the player\'s humanoid.","source":{"line":6,"path":"src/playerHumanoidUtil/init.luau"}}')}}]);