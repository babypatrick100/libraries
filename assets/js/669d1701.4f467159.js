"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9025],{7355:t=>{t.exports=JSON.parse('{"functions":[{"name":"bindActionNoInputSink","desc":"Works almost exactly the same as [ContextActionService:BindAction](https://create.roblox.com/docs/reference/engine/classes/ContextActionService#BindAction),\\nexcept that a custom handler is passed as the 2nd argument, which then calls `actionCallback`but returns `Enum.ContextActionResult.Pass` so \\nthe handler never sinks any inputs.\\n\\nYou can think of the custom handler like this:\\n\\n```lua\\nfunction(...)\\n\\tactionCallback(...)\\n\\treturn Enum.ContextActionResult.Pass\\nend\\n```\\n\\n```lua\\ncontextActionServiceUtil.bindActionNoInputSink(\\n\\t\\"Input\\", \\n\\tfunction(_, inputState: Enum.UserInputState, inputObject: InputObject)\\n\\t\\tprint(\\"User pressed Enum.Keycode.A\\")\\n\\tend, \\n\\tfalse, Enum.Keycode.A\\n)\\n```","params":[{"name":"actionName","desc":"","lua_type":"string"},{"name":"actionCallback","desc":"","lua_type":"(\\r\\n\\t\\tactionName: string,\\r\\n\\t\\tinputState: Enum.UserInputState,\\r\\n\\t\\tinputObject: InputObject\\r\\n\\t) -> ()"},{"name":"createTouchButton","desc":"","lua_type":"boolean"},{"name":"...","desc":"","lua_type":"Enum.UserInputType | Enum.KeyCode\\r\\n"}],"returns":[],"function_type":"static","source":{"line":35,"path":"src/contextActionServiceUtil/init.luau"}}],"properties":[],"types":[],"name":"contextActionServiceUtil","desc":" \\n\\nA simple utility module for working with [ContextActionService](https://create.roblox.com/docs/reference/engine/classes/ContextActionService).","source":{"line":6,"path":"src/contextActionServiceUtil/init.luau"}}')}}]);