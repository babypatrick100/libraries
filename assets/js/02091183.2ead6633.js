"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5125],{69714:e=>{e.exports=JSON.parse('{"functions":[{"name":"playerThumbnailPromise","desc":" \\nReturns a promise which is based off of [Promise.retry](https://eryn.io/roblox-lua-promise/api/Promise#retry), wrapped over\\n[Players:GetUserThumbnailAsync](https://create.roblox.com/docs/reference/engine/classes/Players#GetUserThumbnailAsync). \\n\\nThe returned promise will retry upto `retryTimes` (or `3` times, if `retryTimes` is not specified).","params":[{"name":"userId","desc":"","lua_type":"number"},{"name":"thumbnailType","desc":"","lua_type":"Enum.ThumbnailType"},{"name":"thumbnailSize","desc":"","lua_type":"Enum.ThumbnailSize"},{"name":"retryTimes","desc":"","lua_type":"number?\\n"}],"returns":[],"function_type":"static","source":{"line":24,"path":"src/playersUtil/init.luau"}},{"name":"playerFromInstance","desc":" \\nReturns a player from the given instance, if found. This is an efficient\\nwrapper over [Players:GetPlayerFromCharacter](https://create.roblox.com/docs/reference/engine/classes/Players#GetPlayerFromCharacter).\\n \\n```lua\\nlaser.Touched:Connect(function(hit)\\n\\tlocal player = playerUtil.playerFromInstance(hit)\\n\\n\\tif player then\\n\\t\\t-- Damage the player\\n\\tend\\nend)\\n```","params":[{"name":"instance","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"Player?\\n"}],"function_type":"static","source":{"line":57,"path":"src/playersUtil/init.luau"}},{"name":"nameFromUserId","desc":"Returns a [promise](https://eryn.io/roblox-lua-promise/) which is resolved with the user name\\nassociated to the user id. \\n\\n:::tip Caching behavior\\nThis method will immediately cache in the name (retrieved from the given user id), so calls\\nfor the same user id will return in cached user name immediately.\\n:::\\n\\n```lua\\nplayersUtil.nameFromUserId(2981707497):andThen(function(username)\\n\\tprint(username) --\x3e \\"bubshurb\\"\\nend)\\n```","params":[{"name":"userId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<string>"}],"function_type":"static","source":{"line":88,"path":"src/playersUtil/init.luau"}},{"name":"userIdFromName","desc":"Returns a [promise](https://eryn.io/roblox-lua-promise/) which is resolved with the user id \\nassociated to the username.\\n\\n:::tip Caching behavior\\nThis method will immediately cache in the user id (retrieved from the given username), so calls\\nfor the same username will return in cached user id immediately.\\n:::\\n\\n```lua\\nplayersUtil.userIdFromName(\\"bubshurb\\"):andThen(function(userId)\\n\\tprint(userId) --\x3e 2981707497\\nend)\\n```","params":[{"name":"username","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<number>"}],"function_type":"static","source":{"line":130,"path":"src/playersUtil/init.luau"}}],"properties":[],"types":[],"name":"playersUtil","desc":" \\n\\nA simple utility module for working with the [Players](https://create.roblox.com/docs/reference/engine/classes/Players) service.","source":{"line":6,"path":"src/playersUtil/init.luau"}}')}}]);