"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[170],{22148:e=>{e.exports=JSON.parse('{"functions":[{"name":"playerRefPromise","desc":" \\nPromisified version of `playerRefUtil.playerRef`.","params":[{"name":"playerUserId","desc":"","lua_type":"number"}],"returns":[],"function_type":"static","source":{"line":20,"path":"src/playerRefUtil/init.luau"}},{"name":"playerRef","desc":" \\nReturns the player ref from `playerUserId`.","params":[{"name":"playerUserId","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Player?\\n"}],"function_type":"static","source":{"line":34,"path":"src/playerRefUtil/init.luau"}}],"properties":[],"types":[],"name":"playerRefUtil","desc":" \\n\\nA simple utility module for retrieving player refs. Best suited for code that need to run\\nduring invocation point of player object cleanup code.","source":{"line":7,"path":"src/playerRefUtil/init.luau"}}')}}]);