"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1574],{59907:e=>{e.exports=JSON.parse('{"functions":[{"name":"cacheForPlayer","desc":"Returns the cache for the given player, which is automatically cleaned up once `player` leaves the game.\\n\\n:::tip Uniqueness\\nPlayer caches are stored per each player, uniquely keyed by script names. This means a player\'s cache \\nwill always be unique when accessed from different scripts.\\n\\nFor e.g:\\n\\n```lua\\n-- Script 1:\\nlocal cache = playerCacheUtil.cacheForPlayer(player)  \\ncache.test = 1\\n\\nprint(cache) --\x3e {test = 1}\\n\\n\\n-- Script 2:\\nlocal cache = playerCacheUtil.cacheForPlayer(player)  \\ncache.opper = 5\\nprint(cache) --\x3e {opper = 5} \\n```\\n:::\\n\\n:::warning Potential error\\nThis method will throw an error if `player` is not present in game.\\n:::","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"static","source":{"line":48,"path":"src/playerCacheUtil/init.luau"}}],"properties":[],"types":[],"name":"playerCacheUtil","desc":" \\n\\nA very simple utility module for storing in data per player in an unique way.\\n \\n```lua\\nlocal cache = playerCacheUtil.cacheForPlayer(player.UserId)  \\ncache.test = 1\\n\\nprint(cache.test) --\x3e 1 \\n```","source":{"line":13,"path":"src/playerCacheUtil/init.luau"}}')}}]);