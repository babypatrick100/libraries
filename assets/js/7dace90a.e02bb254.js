"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4248],{46753:n=>{n.exports=JSON.parse('{"functions":[{"name":"new","desc":" \\nCreates and returns a new custom animator object. ","params":[{"name":"animator","desc":"","lua_type":"Animator | AnimationController"}],"returns":[{"desc":"","lua_type":"CustomAnimator"}],"function_type":"static","source":{"line":33,"path":"src/CustomAnimator/init.luau"}},{"name":"animationTrack","desc":" \\nReturns the given loaded animation track from the animation, if found.","params":[{"name":"animation","desc":"","lua_type":"Animation"}],"returns":[{"desc":"","lua_type":"AnimationTrack?\\r\\n"}],"function_type":"method","source":{"line":54,"path":"src/CustomAnimator/init.luau"}},{"name":"onAnimationLoadPromise","desc":" \\nReturns a promise which is resolved once the given animation is loaded via [CustomAnimator:loadAnimation].","params":[{"name":"animation","desc":"","lua_type":"Animation"}],"returns":[],"function_type":"method","source":{"line":62,"path":"src/CustomAnimator/init.luau"}},{"name":"loadAnimation","desc":" \\nLoads in the animation as an animation track.","params":[{"name":"animation","desc":"","lua_type":"Animation"}],"returns":[{"desc":"","lua_type":"AnimationTrack\\r\\n"}],"function_type":"method","source":{"line":76,"path":"src/CustomAnimator/init.luau"}},{"name":"playAnimation","desc":" \\nPlays the given animation, if it has been loaded into the animator object via [CustomAnimator:loadAnimation].\\n\\n:::tip\\nYou can also setup attributes for `fadeTime`, `weight`, and `speed` in the animation object, \\nwhich will be used incase the arguments aren\'t specified.\\n\\n- `fadeTime` -> `FadeTime`\\n- `weight` -> `Weight`\\n- `speed` -> `Speed`\\n:::","params":[{"name":"animation","desc":"","lua_type":"Animation"},{"name":"fadeTime","desc":"","lua_type":"number?"},{"name":"weight","desc":"","lua_type":"number?"},{"name":"speed","desc":"","lua_type":"number?\\r\\n"}],"returns":[{"desc":"","lua_type":"AnimationTrack\\r\\n"}],"function_type":"method","source":{"line":96,"path":"src/CustomAnimator/init.luau"}},{"name":"stopAnimation","desc":" \\nStops the given animation, if it has been loaded into the animator object via [CustomAnimator:loadAnimation].\\n\\n:::tip\\nYou can also setup an attribute for `fadeTime` in the animation object, which will be used incase the argument isn\'t specified.\\n\\n- `fadeTime` -> `FadeTime`\\n:::","params":[{"name":"animation","desc":"","lua_type":"Animation"},{"name":"fadeTime","desc":"","lua_type":"number?\\r\\n"}],"returns":[{"desc":"","lua_type":"AnimationTrack\\r\\n"}],"function_type":"method","source":{"line":126,"path":"src/CustomAnimator/init.luau"}},{"name":"stopAll","desc":" \\nStops all loaded animations by calling [CustomAnimator:stopAnimation] on each loaded animation.","params":[{"name":"fadeTime","desc":"","lua_type":"number?"}],"returns":[],"function_type":"method","source":{"line":145,"path":"src/CustomAnimator/init.luau"}},{"name":"all","desc":" \\nReturns a read only array of all animations loaded into the animator object.","params":[],"returns":[{"desc":"","lua_type":"{ [Animation]: AnimationTrack }\\r\\n"}],"function_type":"method","source":{"line":155,"path":"src/CustomAnimator/init.luau"}},{"name":"cleanupAnimationTrack","desc":" \\nStops the given animation track if loaded, and destroys it. ","params":[{"name":"animation","desc":"","lua_type":"Animation"}],"returns":[],"function_type":"method","source":{"line":163,"path":"src/CustomAnimator/init.luau"}},{"name":"animator","desc":" \\nReturns the animator associated to the animator object.","params":[],"returns":[{"desc":"","lua_type":"Animator\\r\\n"}],"function_type":"method","source":{"line":178,"path":"src/CustomAnimator/init.luau"}},{"name":"destroy","desc":" \\nDestroys the custom animator object and renders it unusuable. Additionally, [CustomAnimator:cleanupAnimationTrack] is called\\non all loaded animation tracks too.","params":[],"returns":[],"function_type":"method","source":{"line":187,"path":"src/CustomAnimator/init.luau"}}],"properties":[],"types":[{"name":"CustomAnimator","desc":" ","lua_type":"CustomAnimator","source":{"line":17,"path":"src/CustomAnimator/init.luau"}}],"name":"CustomAnimator","desc":" \\n\\nA simple class for working with animations.\\n\\n```lua\\nlocal playerHumanoidCustomAnimator = CustomAnimator.new(humanoidAnimator)\\nlocal track = playerHumanoidCustomAnimator:loadAnimation(animation)\\ntrack:Play()\\n```","source":{"line":12,"path":"src/CustomAnimator/init.luau"}}')}}]);