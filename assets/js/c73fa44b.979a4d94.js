"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2857],{59907:e=>{e.exports=JSON.parse('{"functions":[{"name":"cleanupPlayerCache","desc":"Cleans up the given player\'s cache. Calls to [playerCacheUtil.cacheForPlayer] for the same player will now\\nreturn **a global empty table**.\\n\\n```lua\\n-- Script 1:\\nlocal cache = playerCacheUtil.cleanupPlayerCache(player)\\ncache.test = 150\\n\\nprint(cache) --\x3e {test = 150}\\nprint(playerCacheUtil.cacheForPlayer(player) == cache) --\x3e true\\n\\nplayerCacheUtil.cleanupPlayerCache(player)\\n\\nlocal cacheNow = playerCacheUtil.cacheForPlayer(player)\\nprint(cacheNow) --\x3e {}\\nprint(cacheNow == cache) --\x3e false\\n```\\n\\n:::warning Potential memory leak\\nThis method assigns an attribute to the player object, `__playerCacheCleanup` for cleanup purposes. If this attribute\\nis removed as a result of developer work, then this can potentially induce a memory leak! Ideally you should call this method \\nfor the player once they leave the game.\\n:::","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"static","source":{"line":46,"path":"src/playerCacheUtil/init.luau"}},{"name":"cacheForPlayer","desc":"Returns the cache for the given player. \\n\\n:::tip Uniqueness\\nPlayer caches are stored per each player, uniquely keyed by script names. This means a player\'s cache \\nwill always be unique when accessed from different scripts.\\n\\nFor e.g:\\n\\n```lua\\n-- Script 1:\\nlocal cache = playerCacheUtil.cacheForPlayer(player)  \\ncache.test = 1\\n\\nprint(cache) --\x3e {test = 1}\\n\\n\\n-- Script 2:\\nlocal cache = playerCacheUtil.cacheForPlayer(player)  \\ncache.opper = 5\\nprint(cache) --\x3e {opper = 5} \\n```\\n\\n:::","params":[{"name":"player","desc":"","lua_type":"Player"}],"returns":[],"function_type":"static","source":{"line":77,"path":"src/playerCacheUtil/init.luau"}}],"properties":[],"types":[],"name":"playerCacheUtil","desc":" \\n\\nA very simple utility module for storing in data per player in an unique way.\\n \\n```lua\\nlocal cache = playerCacheUtil.cacheForPlayer(player.UserId)  \\ncache.test = 1\\n\\nprint(cache.test) --\x3e 1 \\n```","source":{"line":13,"path":"src/playerCacheUtil/init.luau"}}')}}]);